name: roles_dagger_files_image
on:
  push:
    paths:
      - roles/dagger/files/image/**
      - .github/workflows/roles_dagger_files_image.yaml
      - cue.mod/** # cue.mod is a dagger dependencies
      
jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      DAGGER_RELEASE_VERSION: v0.2.34 # renovate: datasource=github-releases depName=dagger lookupName=dagger/dagger versioning=docker
      DAGGER_CACHE_FROM: type=gha,scope=dagger_cache_roles_dagger_files_image
      DAGGER_CACHE_TO: type=gha,mode=max,scope=dagger_cache_roles_dagger_files_image
      DAGGER_PLAN: roles/dagger/files/image/ci.cue
      IMAGE_SUFFIX: -dagger
      
    steps:
      - name: Set DAGGER_VERSION
        id: vars
        run: echo ::set-output name=DAGGER_VERSION::${DAGGER_RELEASE_VERSION:1}

      - name: Clone repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Run tests
        if: github.ref != 'refs/heads/master'
        uses: dagger/dagger-for-github@46924d81463a52e60895f90b1ae6d89394ccb69c # tag=v3
        with:
          version: ${{ steps.vars.outputs.DAGGER_VERSION }}
          cmds: |
            project update
             do test --plan ${{ env.DAGGER_PLAN }}

      - name: Run tests and push image
        if: github.ref == 'refs/heads/master'
        env:
          IMAGE: ghcr.io/${{ github.repository }}${{ env.IMAGE_SUFFIX }}
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

        uses: dagger/dagger-for-github@46924d81463a52e60895f90b1ae6d89394ccb69c # tag=v3
        with:
          version: ${{ steps.vars.outputs.DAGGER_VERSION }}
          cmds: |
            project update
            do push --plan ${{ env.DAGGER_PLAN }}
