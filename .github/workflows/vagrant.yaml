name: vagrant

on: push
jobs:
  ci:
    runs-on: macos-12
    env:
      ANSIBLE_CORE_VERSION: 2.14.1 # renovate: datasource=pypi depName=ansible-core versioning=pep440
      DAGGER_RELEASE_VERSION: v0.2.36 # renovate: datasource=github-releases depName=dagger lookupName=dagger/dagger versioning=docker
      DAGGER_CACHE_FROM: type=gha,scope=dagger_cache_vagrant
      DAGGER_CACHE_TO: type=gha,mode=max,scope=dagger_cache_vagrant
    steps:
      - name: Clone repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3
      - name: Cache Vagrant boxes
        uses: actions/cache@4723a57e26efda3a62cbde1812113b730952852d # v3
        with:
          path: ~/.vagrant.d/boxes
          key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
          restore-keys: |
            ${{ runner.os }}-vagrant-

      - name: Show Vagrant version
        run: vagrant --version

      - name: Install ansible
        run: python3 -m pip install ansible-core==${{ env.ANSIBLE_CORE_VERSION }}

      - name: Install requirements.yml
        run: ansible-galaxy install -r requirements.yml

      - name: Run vagrant up
        run: vagrant up

      - name: ssh into box after boot
        run: vagrant ssh -c "echo 'hello world!'"

      - name: Set vars
        id: vars
        run: |
          echo ::set-output name=DAGGER_VERSION::${DAGGER_RELEASE_VERSION:1}
          echo ::set-output name=VAGRANT_HOST::$(python3 roles/vagrant/files/get_host.py)
      - name: Run tests
        uses: dagger/dagger-for-github@75549c92b94513311d37a80f2732cc3399f9af86 # v3
        env:
          BUILDKIT_HOST: tcp://${{ steps.vars.outputs.VAGRANT_HOST }}:1234
        with:
          version: ${{ steps.vars.outputs.DAGGER_VERSION }}
          cmds: |
            project update
            do test
